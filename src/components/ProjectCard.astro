---
interface Props {
  title: string;
  description: string;
  technologies: string[];
  category: string;
  image?: string;
  links: { text: string; href: string; type?: string }[];
  featured?: boolean;
}

const { 
  title, 
  description, 
  technologies, 
  category, 
  links, 
  image, 
  featured = false 
} = Astro.props;

// Function to get icon based on category
const getCategoryIcon = (category: string) => {
  const categoryIcons: Record<string, string> = {
    'Fintech': 'üí∞',
    'EdTech': 'üìö',
    'E-Commerce': 'üõí',
    'Utility': 'üõ†Ô∏è',
    'Web': 'üåê',
    'Mobile': 'üì±',
    'Design': 'üé®',
    'Default': 'üíª'
  };
  
  return categoryIcons[category] || categoryIcons['Default'];
};
---

<div class={`project-card ${featured ? 'featured' : ''}`}>
  <div class="card-image">
    {image ? (
      <img src={image} alt={title} loading="lazy" />
    ) : (
      <div class="icon-placeholder">
        <span class="category-icon">{getCategoryIcon(category)}</span>
      </div>
    )}
    <div class="category-badge">{category}</div>
    {featured && <div class="featured-badge">Featured</div>}
  </div>
  
  <div class="card-content">
    <h3 class="project-title">{title}</h3>
    <p class="project-description">{description}</p>

    <div class="technologies">
      {technologies.map((tech) => (
        <span class="tech-tag">{tech}</span>
      ))}
    </div>

    {links.length > 0 && (
      <div class="project-links">
        {links.map((link) => (
          <a 
            href={link.href} 
            target="_blank" 
            rel="noopener noreferrer"
            class={`project-link ${link.type || 'default'}`}
          >
            {link.type === 'website' && 'üåê'}
            {link.type === 'github' && 'üíª'}
            {link.type === 'demo' && 'üöÄ'}
            {!link.type && 'üîó'}
            {link.text}
          </a>
        ))}
      </div>
    )}
  </div>
</div>


<style>
  .project-card {
    background: var(--card-bg);
    border-radius: 1rem;
    overflow: hidden;
    transition: all 0.3s ease;
    border: 1px solid var(--border-color);
    position: relative;
    backdrop-filter: blur(10px);
    height: 100%;
    display: flex;
    flex-direction: column;
  }

  .project-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.2);
    border-color: var(--primary);
  }

  .project-card.featured {
    border: 2px solid var(--primary);
    box-shadow: 0 5px 25px rgba(var(--primary-rgb), 0.3);
  }

    .card-image {
    position: relative;
    height: 180px;
    overflow: hidden;
    background: linear-gradient(135deg, rgba(var(--primary-rgb), 0.1), rgba(15, 23, 42, 0.3));
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .icon-placeholder {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 100%;
    height: 100%;
  }

  .category-icon {
    font-size: 3.5rem;
    opacity: 0.8;
    transition: all 0.3s ease;
  }

  .project-card:hover .category-icon {
    transform: scale(1.1);
    opacity: 1;
  }

  .card-image img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.4s ease;
  }

  .project-card:hover .card-image img {
    transform: scale(1.1);
  }

  .category-badge {
    position: absolute;
    top: 0.75rem;
    left: 0.75rem;
    background: var(--primary);
    color: white;
    padding: 0.3rem 0.8rem;
    border-radius: 1rem;
    font-size: 0.8rem;
    font-weight: 600;
    z-index: 1;
  }

  .featured-badge {
    position: absolute;
    top: 0.75rem;
    right: 0.75rem;
    background: linear-gradient(135deg, #f59e0b, #ec4899);
    color: white;
    padding: 0.3rem 0.8rem;
    border-radius: 1rem;
    font-size: 0.8rem;
    font-weight: 600;
    z-index: 1;
    animation: pulse 2s infinite;
  }

  @keyframes pulse {
    0%, 100% { transform: scale(1); }
    50% { transform: scale(1.05); }
  }

  .card-content {
    padding: 1.25rem;
    display: flex;
    flex-direction: column;
    gap: 1rem;
    flex-grow: 1;
  }

  .project-title {
    font-size: 1.25rem;
    font-weight: 600;
    color: var(--color);
    margin: 0;
    line-height: 1.3;
  }

  .project-description {
    color: var(--text-light);
    line-height: 1.5;
    font-size: 0.95rem;
    margin: 0;
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  .technologies {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
    margin-top: auto;
  }

  .tech-tag {
    background: rgba(var(--primary-rgb), 0.1);
    color: var(--primary);
    padding: 0.3rem 0.8rem;
    border-radius: 1rem;
    font-size: 0.8rem;
    font-weight: 500;
    border: 1px solid rgba(var(--primary-rgb), 0.3);
  }

  .project-links {
    display: flex;
    gap: 0.75rem;
    flex-wrap: wrap;
    margin-top: 0.5rem;
  }

  .project-link {
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    color: var(--primary);
    text-decoration: none;
    font-weight: 500;
    font-size: 0.9rem;
    padding: 0.5rem 1rem;
    border: 1px solid var(--primary);
    border-radius: 0.5rem;
    transition: all 0.3s ease;
  }

  .project-link:hover {
    background: var(--primary);
    color: white;
    transform: translateY(-2px);
    box-shadow: 0 2px 10px rgba(var(--primary-rgb), 0.3);
  }

  .project-link.website {
    background: var(--primary);
    color: white;
  }

  .project-link.website:hover {
    background: transparent;
    color: var(--primary);
  }

  /* Responsive Design */
  @media (max-width: 768px) {
    .card-image {
      height: 150px;
    }

    .card-content {
      padding: 1rem;
      gap: 0.8rem;
    }

    .project-title {
      font-size: 1.1rem;
    }

    .project-description {
      font-size: 0.9rem;
    }

    .tech-tag {
      font-size: 0.75rem;
    }

    .project-link {
      font-size: 0.85rem;
      padding: 0.4rem 0.8rem;
    }
  }
</style>